
# like deploy-rs
# do it in a transaction
hosts = {
 fooHost = {
   # обязательный ли хост
   # зависимости
   deps = [ "barHost" ];

 };
};


 на одном (а лучше нескольких компьютерах) запущен мастер
 на каждой управляемой машине в кластере есть слейвы (агенты)
 мастер хранит в базе состояние всех слейвов и какие корневые деривация установлены (и какие статусы systemd сервисов?)
 слейвы репортят изменение рутовых дериваций (и статусы systemd сервисов?)
 мастер делает централизованно gc
 мастер хранит желаемое состояние кластера и текущее
  при возможности катит на слейвов новые деривации (если все требования по зависимостям выполнены)
 накатывание новых корневых дериваций происходит аналогично deploy-rs с откатами

 git бот раз в сутки обновляет зависимости (nixpkgs), делает pr с тестами, и если всё ок, то мержит его
 CI по мержу деплоит через мастера новую версию

 взаимодействие агента через ssh и запуск локального клиента с подключением по локальному сокету (?)
 агент на слейве запущен под рутом, а подключение идёт от кастомного безправного пользователя
 протокол взаимодействия такой, что его можно руками использовать (json?)
 есть plan, а есть apply как в терраформе

 каждый агент должен сам генерить ключи для своего хоста при накатке и паблики должны быть в стейте к которому есть доступ при билде

 имя deployex (или deployerl)

 (?) при раскатке должен генерится hardware-config.nix для каждой машины и он должен быть в стейте
